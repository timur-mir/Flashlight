## This file must *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.
#
# Location of the SDK. This is only used by Gradle.
# For customization when using a Version Control System, please read the
# header note.
#Thu Apr 17 21:58:21 UZT 2025
photoView3.setImageResource(0)=
paint=
photoView.setImageDrawable(null)=
crime?.let={
reportButton.setOnClickListener={
photoView.setImageBitmap(bitmap)=
crime.suspect=suspect
counterF=+\= 1
"\u0412\u044B=\u0443\u0434\u0430\u043B\u0438\u043B\u0438 \u0437\u0430\u043F\u0438\u0441\u044C \u0438 \u0444\u043E\u0442\u043E... ${crime.title}",
photoView4.setOnClickListener={
photoView2=view.findViewById(R.id.crime_photo2) as ImageView
//startActivity(Intent.createChooser(sendIntent,="\u041E\u0442\u043F\u0440\u0430\u0432\u043A\u0430 \u043E\u0447\u0451\u0442\u0430"))
photoView3=view.findViewById(R.id.crime_photo3) as ImageView
photoView4=view.findViewById(R.id.crime_photo4) as ImageView
fos\!\!.close()=
)=
message.yOffset=/ 2
closeWarnings.setCancelable(false)=
photoView4.setImageBitmap(bitmap)=
canvas.drawBitmap(bitmapCopy,=0f, 0f, paint)
photoUri3?.let={ it1 -> requireActivity().contentResolver.delete(it1, null, null) }
captureImage.putExtra(MediaStore.EXTRA_OUTPUT,=photoUri4)
;=
putSerializable(ARG_CRIME_AD,=crimeId)
object=CounterFoto {
photoButton.apply={
dateButton=view.findViewById(R.id.crime_date) as Button
resultCode=\!\= Activity.RESULT_OK -> return
closeWarnings.setView(progressBar)=
photoView2.setImageBitmap(bitmap2)=
nameWorker,=convertToPixels(requireActivity(), 1),
savedInstanceState=Bundle?
crimeListViewModel.deleteCrime(crime)=
photoView4.setOnLongClickListener={
LinearLayout.LayoutParams.WRAP_CONTENT=
sendIntent.setPackage("com.whatsapp")=
override=fun onActivityResult(requestCode\: Int, resultCode\: Int, data\: Intent?) {
parentFragmentManager=
requireActivity().grantUriPermission(=
message.setGravity(=
it.moveToFirst()=
crimeDetailViewModel.loadCrime(crimeId)=
captureImage,=
updatePhotoViewWhenFotoCapture(counterF)=
ExifInterface.ORIENTATION_NORMAL=
titleField.text="${crime.title}"
closeWarnings.show()=
super.onViewCreated(view,=savedInstanceState)
context,=
/*dateButton.apply={
//import=java.io.File
crime.date=date
paint.setColor(Color.BLACK)=
}=
photoView2.setOnClickListener={
photoView=view.findViewById(R.id.crime_photo) as ImageView
updateUI()=
photoUri3,=
paint.setXfermode(PorterDuffXfermode(PorterDuff.Mode.SRC_OVER))=
}*/=
reportButton=view.findViewById(R.id.crime_report) as Button
brackProduct,=convertToPixels(requireActivity(), 1),
packageManager.queryIntentActivities(=
ViewModelProviders.of(this).get(CrimeDetailViewModel=\:class.java)
audio2.reset()=
photoView2.setOnLongClickListener={
updatePhotoView()=
//}=
super.onStart()=
arrayUri=as java.util.ArrayList<out Parcelable>
closeWarnings.setMessage("\u041F\u043E\u0434\u0433\u043E\u0442\u043E\u0432\u043A\u0430=\u043A \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044E \u0434\u0430\u043D\u043D\u044B\u0445...")
audio2.start()=
photoUri2,=
PackageManager.MATCH_DEFAULT_ONLY=
paint.setColor(Color.WHITE)=
it1,=
photoButton=view.findViewById(R.id.crime_camera) as ImageButton
).show()=
private=fun getCrimeReport()\: String {
.commit()=
import=androidx.fragment.app.FragmentManager
companion=object {
for=(cameraActivity in cameraActivities) {
options.inMutable=true
fos=FileOutputStream(photoFile4.path)
sendIntent.putParcelableArrayListExtra(=
Gravity.CENTER,=message.xOffset / 2,
"\u0423\u0441\u043F\u0435\u0448\u043D\u043E",=
paint.textSize=convertToPixels(requireActivity(), 11)
sdk.dir=C\:\\Users\\TIMURMIR\\AppData\\Local\\Android\\Sdk
dateButton.text=DateFormat.format(DATE_FORMAT, crime.date).toString()
"Paint"=
class=CrimeFragment \: Fragment(), DatePickerFragment.Callbacks {
photoView3.setOnClickListener={
Toast.LENGTH_SHORT=
convertToPixels(requireActivity(),=160), paint
Intent.FLAG_GRANT_WRITE_URI_PERMISSION=
photoUri4,=
photoUri,=
"${DateFormat.format(DATE_FORMAT,=Date()).toString()}".substring(11, 19)
photoView4.setImageBitmap(bitmap4)=
photoUri3=FileProvider.getUriForFile(
photoUri2=FileProvider.getUriForFile(
photoView2.setImageBitmap(bitmap)=
photoUri4=FileProvider.getUriForFile(
photoUri?.let={ it1 -> requireActivity().contentResolver.delete(it1, null, null) }
deleteButton.setOnClickListener={
.query(it,=queryFields, null, null, null)
photoView.setOnClickListener={
dateMontajSlice,=convertToPixels(requireActivity(), 1),
container=ViewGroup?,
deleteButton=view.findViewById(R.id.crime_delete) as Button
imageDialog.setArguments(args);=
photoView3.setImageBitmap(bitmap)=
when={
orientationChange=width > height
else={
text=crime.date.toString()
args.putString("path",=photoFile4.path);
crimeDetailViewModel.crimeLiveData.observe(=
if=(photoFile4.exists()) {
val=args \= Bundle().apply {
var=counterF \= 0
.beginTransaction()=
photoView.setImageResource(0)=
imageDialog.show(childFragmentManager,="imajeViewDialog")
sendIntent.action=Intent.ACTION_SEND_MULTIPLE
setOnClickListener={
);=
sendIntent.setType("image/jpeg")=
isEnabled=false
photoView2.setImageResource(0)=
canvas.drawText(=
bitmapCopy.compress(Bitmap.CompressFormat.JPEG,=100, fos)
audio2=null
photoView3.setImageBitmap(bitmap3)=
inflater=LayoutInflater,
MainActivity.CallMenu.newCrimeFlag=false
super.onDetach()=
requireActivity().contentResolver,=bitmapC, name,
photoUri2?.let={ it1 -> requireActivity().contentResolver.delete(it1, null, null) }
ExifInterface.TAG_ORIENTATION,=
dateButton.setOnClickListener={
})=
requireActivity().revokeUriPermission(=
},=2000)
cursor?.use={
requireActivity().contentResolver=
crimeDetailViewModel.saveCrime(crime)=
lateinit=var crimeListViewModel\: CrimeListViewModel
closeWarnings.setIcon(R.drawable.b)=
Intent.EXTRA_STREAM,=
progressBar.layoutParams=lp
crime=Crime()
"\u041D\u0435=\u0443\u0441\u043F\u0435\u0448\u043D\u043E", Toast.LENGTH_SHORT
cabNumberText,=convertToPixels(requireActivity(), 1),
LinearLayout.LayoutParams.WRAP_CONTENT,=
titleField=view.findViewById(R.id.crime_title2) as TextView
super.onStop()=
photoView4.setImageResource(0)=
Toast.makeText(=
.replace(R.id.fragment_container,=fragment)
timeMontajSlice,=convertToPixels(requireActivity(), 1),
startActivity(sendIntent)=
photoView3.setOnLongClickListener={
photoFile3=
photoFile2=
return=CrimeFragment().apply {
fun=newInstance(crimeId\: UUID?)\: CrimeFragment {
photoFile4=
super.onCreate(savedInstanceState)=
"com.example.criminalintentnew.fileprovider",=
suspectButton=view.findViewById(R.id.crime_suspect) as Button
closeWarnings.setPositiveButton("\u0423\u0434\u0430\u043B\u0438\u0442\u044C",=
requestCode=\= REQUEST_PHOTO -> {
Handler().postDelayed(Runnable={
startActivityForResult(captureImage,=REQUEST_PHOTO)
photoFile=
"\u041F\u043E=\u0434\u0430\u043D\u043D\u043E\u043C\u0443 \u043A\u0430\u0431\u0438\u043D\u0435\u0442\u0443 \u0432 \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 \u043D\u0435\u0442 \u0444\u043E\u0442\u043E",
this.crime=crime
crime.title="\u041A\u0430\u0431\u0438\u043D\u0435\u0442 ${MainActivity.CallMenu.cabinetCount.toString()}"
package=com.example.criminalintentnew
closeWarnings.setNegativeButton("\u041E\u0442\u043C\u0435\u043D\u0430",=object \: DialogInterface.OnClickListener {
.addToBackStack("cabinet")=
closeWarnings.setTitle("\u0423\u0434\u0430\u043B\u0438\u0442\u044C=\u0434\u0430\u043D\u043D\u044B\u0435 \u043F\u043E \u043A\u0430\u0431\u0438\u043D\u0435\u0442\u0443 \u2116${cabinetCount}?")
if(bitmap\!=null)
null=
canvas.drawRect(=
true=
requireActivity().contentResolver.delete(=
Toast.makeText(requireActivity(),="\u0423\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0444\u043E\u0442\u043E\:${photoUri4}\!", Toast.LENGTH_SHORT)
cameraActivity.activityInfo.packageName,=
null,=
suspectButton.text=suspect
packageManager.resolveActivity(=
photoUri=FileProvider.getUriForFile(
////=getString(R.string.crime_report_suspect, crime.suspect)
/*=Log.d(TAG,"args bundle crime ID\: $crimeId")*/
audio2.release()=
//=}
message.show()=
fos\!\!.flush()=
.show()=
viewLifecycleOwner,=
photoUri4?.let={ it1 -> requireActivity().contentResolver.delete(it1, null, null) }
super.onAttach(context)=
//val=imageUriArray\:ArrayList<Uri?> \= ArrayList<Uri?>()
crimeListViewModel=ViewModelProviders.of(this).get(CrimeListViewModel\:\:class.java)
androidx.lifecycle.Observer={ crime ->
"${workerRepository.getName(requireContext())}=-${dateString}"
arguments=args
photoView.setOnLongClickListener={
requireActivity(),=
